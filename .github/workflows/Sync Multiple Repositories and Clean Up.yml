name: Sync Multiple Repositories and Clean Up

on:
  schedule:
    - cron: '*/30 * * * *'  # 每半小时运行一次，根据需要调整频率
  push:
    branches:
      - main
  workflow_dispatch:  # 允许手动触发

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: main

      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Sync Repositories
        run: |
          set -e  # 遇到任何错误立即退出
          
          # 仓库列表
          repos=(
            "https://github.com/kiddin9/kwrt-packages.git"
          )

          # 克隆或拉取每个仓库
          for repo in "${repos[@]}"; do
            repo_name=$(basename "$repo" .git)
            if [ -d "$repo_name" ]; then
              echo "Updating $repo_name..."
              cd "$repo_name"
              git pull origin main
              cd ..
            else
              echo "Cloning $repo_name..."
              git clone "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@${repo#https://}"
            fi
          done

          # 同步所有仓库到一个目标仓库
          target_repo="https://github.com/t96mytell/openwrt-packages-23.05.git"  # 替换为目标仓库
          target_repo_name=$(basename "$target_repo" .git)
          if [ -d "$target_repo_name" ]; then
            cd "$target_repo_name"
            git pull origin main
          else
            git clone "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@${target_repo#https://}"
            cd "$target_repo_name"
          fi

          for repo in "${repos[@]}"; do
            repo_name=$(basename "$repo" .git)
            cd "../$repo_name"
            git pull origin main
            cd "../$target_repo_name"
            git remote add "$repo_name" "../$repo_name"
            git fetch "$repo_name"
            git rebase "$repo_name/main" || (git rebase --abort && git merge --strategy=ours "$repo_name/main")
            git remote remove "$repo_name"
          done

          git push origin main --force
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Cleanup Old Workflow Runs
        uses: Mattraks/delete-workflow-runs@v1
        with:
          retention_days: 3  # 保留三天内的 workflow 记录
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
